{
  "swagger": "2.0",
  "info": {
    "title": "WanderVoice",
    "description": "AI In-car Voice Assistant, explore more about your destination, built during the COMSE6998 at Columbia University.",
    "version": "1.0.0"
  },
  "schemes": [
    "https"
  ],
  "basePath": "/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/login/in": {
      "post": {
        "summary": "The endpoint for the Login lambda connecting with DynamoDB.",
        "description": "This API takes in username and password from the client and returns\nsuccess or failure message as response. The API connects with login\nbackend functionality, checking if the login info is in the database\nand returns a true-fail reply.\n",
        "tags": [
          "API"
        ],
        "operationId": "sendLogin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A backend response",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login/signup": {
      "post": {
        "summary": "The endpoint for the Signup lambda connecting with DynamoDB.",
        "description": "This API takes in username and password from the client and returns\nsuccess or failure message as response. The API connects with login\nbackend functionality, checking if the login info is in the database\nand returns a true-fail reply.\n",
        "tags": [
          "API"
        ],
        "operationId": "Signup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A backend response",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wandervoice/tourguide": {
      "post": {
        "summary": "The endpoint for the lambda for further process of client input.",
        "description": "This API get user's input in form of text or voice, and send to lambda for further process. If it is voice, send to trasition component.\n",
        "tags": [
          "API"
        ],
        "operationId": "GuideMessage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChatRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A backend response",
            "schema": {
              "$ref": "#/definitions/ChatResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wandervoice/recommendation": {
      "post": {
        "summary": "The endpoint for the lambda for further process of client input for recommendation function.",
        "description": "This API get user's input in form of text or voice, and send to lambda for recommendation. If it is voice, send to trasition component.\n",
        "tags": [
          "API"
        ],
        "operationId": "RecommendMessage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChatRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A backend response",
            "schema": {
              "$ref": "#/definitions/RecommendResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "LoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "boolean"
        }
      }
    },
    "ChatRequest": {
      "type": "object",
      "properties": {
        "model": {
          "type": "integer"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        }
      }
    },
    "ChatResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        }
      }
    },
    "RecommendResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendMessage"
          }
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "unstructured": {
          "$ref": "#/definitions/UnstructuredMessage"
        }
      }
    },
    "RecommendMessage": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "unstructured": {
          "$ref": "#/definitions/ImageMessage"
        }
      }
    },
    "UnstructuredMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "voice": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "datetime"
        }
      }
    },
    "ImageMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "datetime"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}